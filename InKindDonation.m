// 
// InKindDonation.m
// Generated by auto-coder 1.0
// copyright 2007 The Little Joy.  All rights reserved
#import "InKindDonation.h"
#import "IKDClassDescription.h"

@implementation InKindDonation

+ (void) initialize {
  if ( self == [InKindDonation class] ) {
    id superDescription = [[self superclass] classDescription];
    NSArray *attributeKeys = [superDescription attributeKeys];
    NSDictionary *typeForKey = [superDescription typeForKey];
    NSMutableArray *superAttributes = [NSMutableArray arrayWithArray:attributeKeys];
    NSMutableDictionary *superTypes = [NSMutableDictionary dictionaryWithDictionary:typeForKey];
    IKDClassDescription *cd = [[IKDClassDescription alloc] init];
    [superAttributes addObjectsFromArray:[NSArray arrayWithObjects:@"items",nil]];
    [superTypes setObject:LjArrayType forKey:@"items"];
    [cd setAttributeKeys:superAttributes];
    [cd setTypeForKey:superTypes];
    [NSClassDescription registerClassDescription:cd forClass:[self class]];
    [cd release];
  }
}

- (id) init {
  self = [super init];
  if (self != nil) {
    [self setItems:[[NSArray alloc] init]];
  }
  return self;
}


//******************************************************************************
// dealloc
//******************************************************************************
- (void) dealloc {
  [items release];
  [super dealloc];
}


//******************************************************************************
// encode
//******************************************************************************
- (void)encodeWithCoder:(NSCoder *)coder {
  [super encodeWithCoder:coder];
  [coder encodeObject:items forKey:@"items"];
}


//******************************************************************************
// decode
//******************************************************************************
- (id)initWithCoder:(NSCoder *)coder {
  [super initWithCoder:coder];
  [self setItems:[coder decodeObjectForKey:@"items"]];
 return self;
}


//******************************************************************************
// methods
//******************************************************************************



//******************************************************************************
// accessors and setters
//******************************************************************************
- (NSMutableArray *)items {
  return items;
}
- (void) setItems:(NSArray *)arg {
  if (arg != items) {
    [items release];
    items = [arg mutableCopy];
  }
}
@end