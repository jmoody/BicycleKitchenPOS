// 
// ViewInvoice.m
// Generated by auto-coder 1.0
// copyright 2007 The Little Joy.  All rights reserved
#import "ViewInvoice.h"
#import "Invoices.h"
#import "Person.h"
#import "People.h"
#import "InvoiceArchiver.h"

@implementation ViewInvoice

- (id) init {
  self = [super init];
  if (self != nil) {
    [self setRunningModal:NO];
    self = [super initWithWindowNibName:@"ViewInvoice"];
  }
  return self;
}

//******************************************************************************
// dealloc
//******************************************************************************

- (void) dealloc {
  [invoice release];
  [productsArray release];
  [super dealloc];
}

//******************************************************************************
// windowing
//******************************************************************************

- (void)windowDidLoad {
   [super windowDidLoad];
   [self setupButtons];
   [self setupTextFields];
   [self setupTables];
   [self setupStateVariables];
}

//******************************************************************************

- (void)setupForModal {
   [super setupForModal];
   [self setupButtons];
   [self setupTextFields];
   [self setupTables];
   [self setupStateVariables];
}

//******************************************************************************

- (void)setupForNonModal {
   [super setupForNonModal];
   [self setupButtons];
   [self setupTextFields];
   [self setupTables];
   [self setupStateVariables];
}

//******************************************************************************

- (void)runModalWithParent:(NSWindow *) parent {
   [super runModalWithParent:parent];
}


//******************************************************************************
// setup
//******************************************************************************

- (void)setupButtons {
  // noop
}

//******************************************************************************

- (void)setupTextFields {
  //NSLog(@"setup text fields");
  //NSLog(@"personName: %@", [currentlyViewedInvoice personName]);
  [personNameTextField setStringValue:[invoice personName]];
  bool isPaid = [invoice invoicePaid];
  if (isPaid) {
    NSString *dateStr = [[invoice paidDate] descriptionWithCalendarFormat:@"%m/%d/%Y"];
    [paidDateTextField setStringValue:dateStr];
  } else {
    [paidDateTextField setStringValue:@"not paid"];
  }
  
  double cardAmount = [invoice amountReceivedCreditCard] + [invoice amountReceivedDebitCard];
  
  if (isPaid) {
    [[paymentSummaryForm cellAtIndex:0] setDoubleValue:[invoice amountReceivedCash]];
    [[paymentSummaryForm cellAtIndex:1] setDoubleValue:[invoice amountReceivedCheck]];
    [[paymentSummaryForm cellAtIndex:2] setDoubleValue:[invoice amountReceivedStoreCredit]];
    [[paymentSummaryForm cellAtIndex:3] setDoubleValue:cardAmount];
    [[paymentSummaryForm cellAtIndex:4] setDoubleValue:[invoice totalAmountReceived]];
    [[paymentSummaryForm cellAtIndex:5] setDoubleValue:[invoice invoiceTotal]];
    [[paymentSummaryForm cellAtIndex:6] setDoubleValue:[invoice amountOfChangeGiven]];
  } else {
    [[paymentSummaryForm cellAtIndex:0] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:1] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:2] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:3] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:4] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:5] setDoubleValue:0.0];
    [[paymentSummaryForm cellAtIndex:6] setDoubleValue:0.0];
  }
  
  if (isPaid && (cardAmount > 0.0)) {
    [checkNumberTextField setIntValue:[invoice checkNumber]];
  } else {
    [self clearTextField:checkNumberTextField];
  }
  
  if (isPaid && (cardAmount > 0.0)) {
    [cardTypeTextField setStringValue:[invoice cardType]];
    NSString *expStr = [[invoice expirationDate] descriptionWithCalendarFormat:@"%m/%d/%Y"];
    [expDateTextField setStringValue:expStr];
    [lastFourDigitsTextField setStringValue:[invoice lastFourDigits]];
    if( [invoice amountReceivedCreditCard] > 0.0) {
      [creditButton setState:1];
      [debitButton setState:0];
    } else {
      [creditButton setState:0];
      [debitButton setState:1];
    }
  } else {
    [self clearTextField:cardTypeTextField];
    [self clearTextField:expDateTextField];
    [self clearTextField:lastFourDigitsTextField];
    [debitButton setState:0];
    [creditButton setState:0];
  }
}

//******************************************************************************

- (void)setupTables {
  [self setProductsArray:[invoice items]];
  [productsTableView reloadData];

}

//******************************************************************************

- (void)setupStateVariables {
  //noop
}


//******************************************************************************
// button actions
//******************************************************************************

- (IBAction)printInvoiceButtonClicked:(id)sender {
    //NSLog(@"printInvoiceButton clicked");
  if ([invoice invoicePaid]) {
    [[InvoiceArchiver sharedInstance] printFileAtPath:[invoice pathToPdf]];
  } else {
    [[InvoiceArchiver sharedInstance] printInvoice:invoice];
  }
  if (runningModal) {
    [super stopModalAndCloseWindow];
  } else {
    [[self window] close];
  }  
}

//******************************************************************************

- (IBAction)closeButtonClicked:(id)sender {
  //NSLog(@"closeButton clicked");
  if (runningModal) {
    [self stopModalAndCloseWindow];
  } else {
    [[self window] close];
  }
}


//******************************************************************************
// misc
//******************************************************************************


//******************************************************************************
// accessors and setters
//******************************************************************************

- (Invoice *)invoice {
  return invoice;
}
- (void) setInvoice:(Invoice *)arg {
  [arg retain];
  [invoice release];
  invoice = arg;
}
- (NSMutableArray *)productsArray {
  return productsArray;
}
- (void) setProductsArray:(NSArray *)arg {
  if (arg != productsArray) {
    [productsArray release];
    productsArray = [arg mutableCopy];
  }
}

//******************************************************************************
// notifications
//******************************************************************************

- (void)setupNotificationObservers {
     NSNotificationCenter *nc;
     nc = [NSNotificationCenter defaultCenter];

}
@end