// 
// CompViewer.m
// Generated by auto-coder 1.0
// copyright 2007 The Little Joy.  All rights reserved
#import "CompViewer.h"
#import "Comps.h"
#import "CompArchiver.h"

@implementation CompViewer

- (id) init {
  self = [super init];
  if (self != nil) {
    [self setRunningModal:NO];
    self = [super initWithWindowNibName:@"CompViewer"];
  }
  return self;
}

//******************************************************************************
// dealloc
//******************************************************************************

- (void) dealloc {
  [compsArray release];
  [comp release];
  [super dealloc];
}

//******************************************************************************
// windowing
//******************************************************************************

- (void)windowDidLoad {
  [super windowDidLoad];
  [self setupButtons];
  [self setupTextFields];
  [self setupTables];
  [self setupStateVariables];
}

//******************************************************************************

- (void)setupForModal {
  [super setupForModal];
  [self setupButtons];
  [self setupTextFields];
  [self setupTables];
  [self setupStateVariables];
}

//******************************************************************************

- (void)setupForNonModal {
  [super setupForNonModal];
  [self setupButtons];
  [self setupTextFields];
  [self setupTables];
  [self setupStateVariables];
}

//******************************************************************************

- (void)runModalWithParent:(NSWindow *) parent {
  [super runModalWithParent:parent];
}


//******************************************************************************
// setup
//******************************************************************************

- (void)setupButtons {
  // nothing to be done
}

//******************************************************************************

- (void)setupTextFields {
  [nameTextField setStringValue:[comp personName]];
  [cookTextField setStringValue:[comp cookNameOrInitials]];
  [reasonTextField setStringValue:[comp reason]];
  [noteTextView setString:[comp note]];
  [datePicker setDateValue:[comp date]];
  [valueTextField setDoubleValue:[comp valueOfComp]];
}

//******************************************************************************

- (void)setupTables {
  [self setCompsArray:[comp items]];
}

//******************************************************************************

- (void)setupStateVariables {
  // nothing to be done
}


//******************************************************************************
// button actions
//******************************************************************************

- (IBAction)datePickerClicked:(id)sender {
  //NSLog(@"datePicker clicked");
}

//******************************************************************************

- (IBAction)cancelButtonClicked:(id)sender {
  //NSLog(@"cancelButton clicked");
  if (runningModal) {
    [self stopModalAndCloseWindow];
  } else {
    [[self window] close];
  }
}

//******************************************************************************

- (IBAction)printButtonClicked:(id)sender {
  //NSLog(@"printButton clicked");
  [self showProgressPanel:@"Printing..."];
  [[CompArchiver sharedInstance] printFileAtPath:[comp pathToPdfArchive]];
  [self closeProgressPanel];
}

//******************************************************************************
// misc
//******************************************************************************



//******************************************************************************
// handlers
//******************************************************************************

- (void)handleCompsClicked:(id)sender {
  
}

//******************************************************************************
// accessors and setters
//******************************************************************************

- (NSMutableArray *)compsArray {
  return compsArray;
}
- (void) setCompsArray:(NSArray *)arg {
  if (arg != compsArray) {
    [compsArray release];
    compsArray = [arg mutableCopy];
  }
}
- (Comp *)comp {
  return comp;
}
- (void) setComp:(Comp *)arg {
  [arg retain];
  [comp release];
  comp = arg;
}



//******************************************************************************
// notifications
//******************************************************************************

- (void)setupNotificationObservers {
  NSNotificationCenter *nc;
  nc = [NSNotificationCenter defaultCenter];
  
}
@end